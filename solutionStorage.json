{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.28.1.47646",
      "templateHash": "10879276395810554806"
    }
  },
  "parameters": {
    "domainJoinUserName": {
      "type": "string"
    },
    "domainJoinUserPassword": {
      "type": "securestring"
    },
    "groupAdmins": {
      "type": "string"
    },
    "groupUsers": {
      "type": "string"
    },
    "keyExpiration": {
      "type": "int",
      "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]",
      "metadata": {
        "description": "Expiration time of the key"
      }
    },
    "keyVaultName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "managedIdentityName": {
      "type": "string"
    },
    "ouPathStorage": {
      "type": "string"
    },
    "ouPathVm": {
      "type": "string"
    },
    "privateDNSZoneId": {
      "type": "string"
    },
    "privateDNSZoneKvId": {
      "type": "string"
    },
    "storageAcctName": {
      "type": "string"
    },
    "storageFileShareName": {
      "type": "string"
    },
    "storageResourceGroup": {
      "type": "string"
    },
    "storageResourceGroupMode": {
      "type": "string",
      "defaultValue": "Existing",
      "allowedValues": [
        "New",
        "Existing"
      ]
    },
    "storageRedundancy": {
      "type": "string",
      "allowedValues": [
        "ZRS",
        "LRS"
      ]
    },
    "storageShareSize": {
      "type": "int"
    },
    "storageTier": {
      "type": "string",
      "allowedValues": [
        "Standard",
        "Premium"
      ]
    },
    "subnetId": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "vmName": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "domainJoinFQDN": "[split(parameters('domainJoinUserName'), '@')[1]]",
    "storageSKU": "[format('{0}_{1}', parameters('storageTier'), parameters('storageRedundancy'))]",
    "scriptLocation": "https://raw.githubusercontent.com/JCoreMS/HostPoolDeployment/master/scripts",
    "subscriptionId": "[subscription().subscriptionId]",
    "storageKind": "[if(or(equals(variables('storageSKU'), 'Premium_LRS'), equals(variables('storageSKU'), 'Premium_ZRS')), 'FileStorage', 'StorageV2')]",
    "smbSettings": "[if(or(equals(variables('storageSKU'), 'Premium_LRS'), equals(variables('storageSKU'), 'Premium_ZRS')), createObject('authenticationMethods', 'Kerberos', 'channelEncryption', 'AES-256-GCM', 'kerberosTicketEncryption', 'AES-256', 'mulitchannel', createObject('enabled', true()), 'versions', 'SMB3.0;SMB3.1.1'), createObject('authenticationMethods', 'Kerberos', 'channelEncryption', 'AES-256-GCM', 'kerberosTicketEncryption', 'AES-256', 'versions', 'SMB3.0;SMB3.1.1'))]",
    "storageSetupScript": "domainJoinStorageAcct.ps1",
    "tenantId": "[subscription().tenantId]"
  },
  "resources": [
    {
      "condition": "[equals(parameters('storageResourceGroupMode'), 'New')]",
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('storageResourceGroup')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "linked_ResourceGroup_Resources",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinUserPassword": {
            "value": "[parameters('domainJoinUserPassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "keyExpiration": {
            "value": "[parameters('keyExpiration')]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "managedIdentityName": {
            "value": "[parameters('managedIdentityName')]"
          },
          "storageAcctName": {
            "value": "[parameters('storageAcctName')]"
          },
          "storageSKU": {
            "value": "[variables('storageSKU')]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          },
          "tenantId": {
            "value": "[variables('tenantId')]"
          },
          "timestamp": {
            "value": "[parameters('timestamp')]"
          },
          "groupAdmins": {
            "value": "[parameters('groupAdmins')]"
          },
          "groupUsers": {
            "value": "[parameters('groupUsers')]"
          },
          "ouPathStorage": {
            "value": "[parameters('ouPathStorage')]"
          },
          "ouPathVm": {
            "value": "[parameters('ouPathVm')]"
          },
          "privateDNSZoneId": {
            "value": "[parameters('privateDNSZoneId')]"
          },
          "privateDNSZoneKvId": {
            "value": "[parameters('privateDNSZoneKvId')]"
          },
          "domainJoinFQDN": {
            "value": "[variables('domainJoinFQDN')]"
          },
          "scriptLocation": {
            "value": "[variables('scriptLocation')]"
          },
          "smbSettings": {
            "value": "[variables('smbSettings')]"
          },
          "storageFileShareName": {
            "value": "[parameters('storageFileShareName')]"
          },
          "storageKind": {
            "value": "[variables('storageKind')]"
          },
          "storageResourceGroup": {
            "value": "[parameters('storageResourceGroup')]"
          },
          "storageSetupScript": {
            "value": "[variables('storageSetupScript')]"
          },
          "storageShareSize": {
            "value": "[parameters('storageShareSize')]"
          },
          "subscriptionId": {
            "value": "[variables('subscriptionId')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.28.1.47646",
              "templateHash": "5515920134202158553"
            }
          },
          "parameters": {
            "domainJoinUserName": {
              "type": "string"
            },
            "domainJoinUserPassword": {
              "type": "securestring"
            },
            "domainJoinFQDN": {
              "type": "string"
            },
            "groupAdmins": {
              "type": "string"
            },
            "groupUsers": {
              "type": "string"
            },
            "keyExpiration": {
              "type": "int"
            },
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "managedIdentityName": {
              "type": "string"
            },
            "ouPathStorage": {
              "type": "string"
            },
            "ouPathVm": {
              "type": "string"
            },
            "privateDNSZoneId": {
              "type": "string"
            },
            "privateDNSZoneKvId": {
              "type": "string"
            },
            "scriptLocation": {
              "type": "string"
            },
            "smbSettings": {
              "type": "object"
            },
            "storageAcctName": {
              "type": "string"
            },
            "storageFileShareName": {
              "type": "string"
            },
            "storageKind": {
              "type": "string"
            },
            "storageResourceGroup": {
              "type": "string"
            },
            "storageShareSize": {
              "type": "int"
            },
            "storageSetupScript": {
              "type": "string"
            },
            "storageSKU": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "tenantId": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "vmAdminPassword": {
              "type": "securestring"
            },
            "vmAdminUsername": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[parameters('managedIdentityName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[parameters('keyVaultName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "enablePurgeProtection": true,
                "enableSoftDelete": true,
                "enabledForDiskEncryption": true,
                "enableRbacAuthorization": true,
                "enabledForDeployment": true,
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices"
                },
                "publicNetworkAccess": "Disabled",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "softDeleteRetentionInDays": 7,
                "tenantId": "[parameters('tenantId')]"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/keys",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]",
              "tags": "[parameters('tags')]",
              "properties": {
                "attributes": {
                  "enabled": true,
                  "exp": "[parameters('keyExpiration')]"
                },
                "kty": "RSA",
                "keySize": 2048,
                "curveName": "P-256",
                "keyOps": [
                  "encrypt",
                  "decrypt",
                  "sign",
                  "verify",
                  "wrapKey",
                  "unwrapKey"
                ],
                "rotationPolicy": {
                  "attributes": {
                    "expiryTime": "P1Y"
                  },
                  "lifetimeActions": [
                    {
                      "action": {
                        "type": "rotate"
                      },
                      "trigger": {
                        "timeBeforeExpiry": "P90D"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
              "name": "[guid(subscription().subscriptionId, 'assignIdentity2Vault')]",
              "properties": {
                "description": "[format('Provides User Identity {0} access to Key Vault {1}', parameters('managedIdentityName'), parameters('keyVaultName'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e147488a-f6f5-4113-8e2d-b22465e65bf6')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-09-01",
              "name": "[parameters('storageAcctName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('storageSKU')]"
              },
              "kind": "[parameters('storageKind')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
                }
              },
              "properties": {
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "defaultToOAuthAuthentication": false,
                "accessTier": "Hot",
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": false,
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Deny"
                },
                "dnsEndpointType": "Standard",
                "largeFileSharesState": "Enabled",
                "encryption": {
                  "identity": {
                    "userAssignedIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
                  },
                  "keySource": "Microsoft.Keyvault",
                  "keyvaultproperties": {
                    "keyname": "[format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp'))]",
                    "keyvaulturi": "[if(endsWith(reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri, '/'), substring(reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri, 0, sub(length(reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri), 1)), reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
                  },
                  "services": {
                    "file": {
                      "enabled": true
                    }
                  },
                  "requireInfrastructureEncryption": false
                }
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), 'Microsoft.Authorization/roleAssignments', guid(subscription().subscriptionId, 'assignIdentity2Vault'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2020-07-01",
              "name": "[format('pep-{0}', parameters('storageAcctName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('pep-{0}', parameters('storageAcctName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2020-07-01",
              "name": "[format('pep-{0}', parameters('keyVaultName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('pep-{0}', parameters('keyVaultName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                      "groupIds": [
                        "vault"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('subnetId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName'))]",
              "properties": {
                "shareQuota": "[parameters('storageShareSize')]",
                "enabledProtocols": "SMB"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAcctName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('pep-{0}', parameters('keyVaultName')), 'vaultPrivateDnsZoneGroup')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "dnsConfig",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDNSZoneKvId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pep-{0}', parameters('keyVaultName')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('storageAcctName'), 'default')]",
              "properties": {
                "protocolSettings": {
                  "smb": "[parameters('smbSettings')]"
                },
                "shareDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pep-{0}', parameters('storageAcctName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('pep-{0}', parameters('storageAcctName')), 'filePrivateDnsZoneGroup')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "dnsConfig",
                    "properties": {
                      "privateDnsZoneId": "[parameters('privateDNSZoneId')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pep-{0}', parameters('storageAcctName')))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAcctName'))]",
              "name": "[guid(subscription().subscriptionId, 'assignIdentity2StorageSMB')]",
              "properties": {
                "description": "[format('Provides User Identity {0} access to Key Vault {1}', parameters('managedIdentityName'), parameters('keyVaultName'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a7264617-510b-434b-a828-9731dc254ea7')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAcctName'))]",
              "name": "[guid(subscription().subscriptionId, 'assignIdentity2StorageRead')]",
              "properties": {
                "description": "[format('Provides User Identity {0} access to Key Vault {1}', parameters('managedIdentityName'), parameters('keyVaultName'))]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "linked_managementVm",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "assignedIdentityId": {
                    "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
                  },
                  "domainJoinFQDN": {
                    "value": "[parameters('domainJoinFQDN')]"
                  },
                  "domainJoinOUPath": {
                    "value": "[parameters('ouPathStorage')]"
                  },
                  "domainJoinUserName": {
                    "value": "[parameters('domainJoinUserName')]"
                  },
                  "domainJoinUserPassword": {
                    "value": "[parameters('domainJoinUserPassword')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "subnetId": {
                    "value": "[parameters('subnetId')]"
                  },
                  "vmName": {
                    "value": "[parameters('vmName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "vmAdminPassword": {
                    "value": "[parameters('vmAdminPassword')]"
                  },
                  "vmAdminUsername": {
                    "value": "[parameters('vmAdminUsername')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "17976268683608884793"
                    }
                  },
                  "parameters": {
                    "assignedIdentityId": {
                      "type": "string"
                    },
                    "domainJoinFQDN": {
                      "type": "string"
                    },
                    "domainJoinOUPath": {
                      "type": "string"
                    },
                    "domainJoinUserName": {
                      "type": "string"
                    },
                    "domainJoinUserPassword": {
                      "type": "securestring"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "timestamp": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]"
                    },
                    "vmName": {
                      "type": "string"
                    },
                    "vmAdminUsername": {
                      "type": "string"
                    },
                    "vmAdminPassword": {
                      "type": "securestring"
                    }
                  },
                  "variables": {
                    "securityProfileJson": {
                      "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                      },
                      "securityType": "TrustedLaunch"
                    },
                    "imageToUse": {
                      "publisher": "MicrosoftWindowsDesktop",
                      "offer": "Windows-11",
                      "sku": "win11-23h2-ent",
                      "version": "latest"
                    },
                    "VmSize": "Standard_D2s_v4"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-11-01",
                      "name": "[format('nic-{0}', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('subnetId')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": true,
                        "enableIPForwarding": false
                      }
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2022-11-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "UserAssigned",
                        "userAssignedIdentities": {
                          "[format('{0}', parameters('assignedIdentityId'))]": {}
                        }
                      },
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[variables('VmSize')]"
                        },
                        "storageProfile": {
                          "imageReference": "[variables('imageToUse')]",
                          "osDisk": {
                            "name": "[format('{0}_osdisk', parameters('vmName'))]",
                            "osType": "Windows",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "deleteOption": "Delete"
                          },
                          "dataDisks": []
                        },
                        "osProfile": {
                          "computerName": "[parameters('vmName')]",
                          "adminUsername": "[parameters('vmAdminUsername')]",
                          "adminPassword": "[parameters('vmAdminPassword')]",
                          "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "enableAutomaticUpdates": false
                          },
                          "secrets": [],
                          "allowExtensionOperations": true
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('vmName')))]",
                              "properties": {
                                "deleteOption": "Delete"
                              }
                            }
                          ]
                        },
                        "securityProfile": "[variables('securityProfileJson')]",
                        "diagnosticsProfile": {
                          "bootDiagnostics": {
                            "enabled": false
                          }
                        },
                        "licenseType": "Windows_Client"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2023-03-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), 'JsonADDomainExtension')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "forceUpdateTag": "[parameters('timestamp')]",
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "Name": "[parameters('domainJoinFQDN')]",
                          "User": "[parameters('domainJoinUserName')]",
                          "Restart": "true",
                          "Options": "3",
                          "OUPath": "[parameters('domainJoinOUPath')]"
                        },
                        "protectedSettings": {
                          "Password": "[parameters('domainJoinUserPassword')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName')), '/')[0], split(format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName')), '/')[1], split(format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName')), '/')[2])]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "linked_managementVMscript",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "domainJoinOUPath": {
                    "value": "[parameters('ouPathVm')]"
                  },
                  "domainJoinUserName": {
                    "value": "[parameters('domainJoinUserName')]"
                  },
                  "domainJoinUserPassword": {
                    "value": "[parameters('domainJoinUserPassword')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "storageSetupScriptUri": {
                    "value": [
                      "[format('{0}/{1}', parameters('scriptLocation'), parameters('storageSetupScript'))]"
                    ]
                  },
                  "storageSetupScriptName": {
                    "value": "[parameters('storageSetupScript')]"
                  },
                  "storageSetupId": {
                    "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').clientId]"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAcctName')]"
                  },
                  "storageFileShareName": {
                    "value": "[parameters('storageFileShareName')]"
                  },
                  "storageResourceGroup": {
                    "value": "[parameters('storageResourceGroup')]"
                  },
                  "subscriptionId": {
                    "value": "[parameters('subscriptionId')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "tenantId": {
                    "value": "[parameters('tenantId')]"
                  },
                  "timestamp": {
                    "value": "[parameters('timestamp')]"
                  },
                  "vmName": {
                    "value": "[parameters('vmName')]"
                  },
                  "groupAdmins": {
                    "value": "[parameters('groupAdmins')]"
                  },
                  "groupUsers": {
                    "value": "[parameters('groupUsers')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.28.1.47646",
                      "templateHash": "1505055709102177552"
                    }
                  },
                  "parameters": {
                    "domainJoinOUPath": {
                      "type": "string"
                    },
                    "domainJoinUserName": {
                      "type": "string"
                    },
                    "domainJoinUserPassword": {
                      "type": "securestring"
                    },
                    "groupAdmins": {
                      "type": "string"
                    },
                    "groupUsers": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "storageFileShareName": {
                      "type": "string"
                    },
                    "storageResourceGroup": {
                      "type": "string"
                    },
                    "storageSetupId": {
                      "type": "string"
                    },
                    "storageSetupScriptUri": {
                      "type": "array"
                    },
                    "storageSetupScriptName": {
                      "type": "string"
                    },
                    "subscriptionId": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "vmName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "cloud": "[environment().name]",
                    "scriptParams": "[format('-OuPath {0} -StorageAccountName {1} -StorageAccountResourceGroupName {2} -SubscriptionId {3} -TenantId {4} -AclUsers {5} -AclAdmins {6} -StorageFileShareName {7} -DomainJoinUserPrincipalName {8} -DomainJoinPassword {9} -StorageSetupId {10} -Cloud {11}', parameters('domainJoinOUPath'), parameters('storageAccountName'), parameters('storageResourceGroup'), parameters('subscriptionId'), parameters('tenantId'), parameters('groupUsers'), parameters('groupAdmins'), parameters('storageFileShareName'), parameters('domainJoinUserName'), parameters('domainJoinUserPassword'), parameters('storageSetupId'), variables('cloud'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2023-03-01",
                      "name": "[format('{0}/{1}', parameters('vmName'), 'CustomScriptExtension')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.10",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                          "timestamp": "[parameters('timestamp')]",
                          "fileUris": "[parameters('storageSetupScriptUri')]"
                        },
                        "protectedSettings": {
                          "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} {1}', parameters('storageSetupScriptName'), variables('scriptParams'))]",
                          "managedIdentity": {
                            "clientId": "[parameters('storageSetupId')]"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName')), 'Microsoft.Authorization/roleAssignments', guid(subscription().subscriptionId, 'assignIdentity2StorageRead'))]",
                "[extensionResourceId(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName')), 'Microsoft.Authorization/roleAssignments', guid(subscription().subscriptionId, 'assignIdentity2StorageSMB'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.Resources/deployments', 'linked_managementVm')]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName')), '/')[0], split(format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName')), '/')[1], split(format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName')), '/')[2])]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('storageResourceGroup'))]"
      ]
    }
  ]
}