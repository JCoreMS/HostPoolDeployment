{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "10702057415758750372"
    }
  },
  "parameters": {
    "domainJoinUserName": {
      "type": "string"
    },
    "domainJoinUserPassword": {
      "type": "securestring"
    },
    "groupAdmins": {
      "type": "string"
    },
    "groupUsers": {
      "type": "string"
    },
    "kerberosEncryptionType": {
      "type": "string",
      "defaultValue": "AES256"
    },
    "keyExpiration": {
      "type": "int",
      "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]",
      "metadata": {
        "description": "Expiration time of the key"
      }
    },
    "keyVaultName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "managedIdentityName": {
      "type": "string"
    },
    "ouPath": {
      "type": "string"
    },
    "privateDNSZoneId": {
      "type": "string"
    },
    "storageAcctName": {
      "type": "string"
    },
    "storageFileShareName": {
      "type": "string"
    },
    "storageResourceGroup": {
      "type": "string"
    },
    "storageShareSize": {
      "type": "int"
    },
    "storageSKU": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ]
    },
    "subnetId": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "vmName": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "domainJoinFQDN": "[split(parameters('domainJoinUserName'), '@')[1]]",
    "scriptLocation": "https://raw.githubusercontent.com/JCoreMS/HostPoolDeployment/master/scripts",
    "smbSettings": "[if(or(equals(parameters('storageSKU'), 'Premium_LRS'), equals(parameters('storageSKU'), 'Premium_ZRS')), createObject('authenticationMethods', 'NTLMv2;Kerberos', 'channelEncryption', 'AES-256-GCM', 'kerberosTicketEncryption', 'AES-256', 'mulitchannel', createObject('enabled', true()), 'versions', 'SMB3.1.1'), createObject('authenticationMethods', 'NTLMv2;Kerberos', 'channelEncryption', 'AES-256-GCM', 'kerberosTicketEncryption', 'AES-256', 'versions', 'SMB3.1.1'))]",
    "storageSetupScript": "domainJoinStorageAcct.ps1",
    "tenantId": "[subscription().tenantId]"
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "enablePurgeProtection": true,
        "enableSoftDelete": true,
        "enabledForDiskEncryption": true,
        "enableRbacAuthorization": true,
        "enabledForDeployment": true,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        },
        "publicNetworkAccess": "Disabled",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 7,
        "tenantId": "[variables('tenantId')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]",
      "tags": "[parameters('tags')]",
      "properties": {
        "attributes": {
          "enabled": true,
          "exp": "[parameters('keyExpiration')]"
        },
        "kty": "RSA",
        "keySize": 2048,
        "curveName": "P-256",
        "keyOps": [
          "encrypt",
          "decrypt",
          "sign",
          "verify",
          "wrapKey",
          "unwrapKey"
        ],
        "rotationPolicy": {
          "attributes": {
            "expiryTime": "P1Y"
          },
          "lifetimeActions": [
            {
              "action": {
                "type": "rotate"
              },
              "trigger": {
                "timeBeforeExpiry": "P90D"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[guid(subscription().subscriptionId, 'assignIdentity2Vault')]",
      "properties": {
        "description": "[format('Provides User Identity {0} access to Key Vault {1}', parameters('managedIdentityName'), parameters('keyVaultName'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '14b46e9e-c2b7-41b4-b07b-48a6ebf60603')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "managementVMscript",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "domainJoinOUPath": {
            "value": "[parameters('ouPath')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinUserPassword": {
            "value": "[parameters('domainJoinUserPassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageSetupScriptUri": {
            "value": [
              "[format('{0}/{1}', variables('scriptLocation'), variables('storageSetupScript'))]"
            ]
          },
          "storageSetupScriptName": {
            "value": "[variables('storageSetupScript')]"
          },
          "storageSetupId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').clientId]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAcctName')]"
          },
          "storageFileShareName": {
            "value": "[parameters('storageFileShareName')]"
          },
          "storageResourceGroup": {
            "value": "[parameters('storageResourceGroup')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "tenantId": {
            "value": "[variables('tenantId')]"
          },
          "timestamp": {
            "value": "[parameters('timestamp')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "groupAdmins": {
            "value": "[parameters('groupAdmins')]"
          },
          "groupUsers": {
            "value": "[parameters('groupUsers')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "1662237575586616056"
            }
          },
          "parameters": {
            "domainJoinOUPath": {
              "type": "string"
            },
            "domainJoinUserName": {
              "type": "string"
            },
            "domainJoinUserPassword": {
              "type": "securestring"
            },
            "groupAdmins": {
              "type": "string"
            },
            "groupUsers": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageFileShareName": {
              "type": "string"
            },
            "storageResourceGroup": {
              "type": "string"
            },
            "storageSetupId": {
              "type": "string"
            },
            "storageSetupScriptUri": {
              "type": "array"
            },
            "storageSetupScriptName": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "tenantId": {
              "type": "string"
            },
            "timestamp": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            }
          },
          "variables": {
            "cloud": "[environment().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "scriptParams": "[format('-OuPath {0} -StorageAccountName {1} -StorageAccountResourceGroupName {2} -SubscriptionId {3} -TenantId {4} -AclUsers {5} -AclAdmins {6} -StorageFileShareName {7} -DomainJoinUserPrincipalName {8} -DomainJoinPassword {9} -StorageSetupId {10} -Cloud {11}', parameters('domainJoinOUPath'), parameters('storageAccountName'), parameters('storageResourceGroup'), variables('subscriptionId'), parameters('tenantId'), parameters('groupUsers'), parameters('groupAdmins'), parameters('storageFileShareName'), parameters('domainJoinUserName'), parameters('domainJoinUserPassword'), parameters('storageSetupId'), variables('cloud'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'CustomScriptExtension')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "timestamp": "[parameters('timestamp')]",
                  "fileUris": "[parameters('storageSetupScriptUri')]"
                },
                "protectedSettings": {
                  "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} {1}', parameters('storageSetupScriptName'), variables('scriptParams'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
      ]
    }
  ],
  "outputs": {
    "AccountId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').clientId]"
    }
  }
}