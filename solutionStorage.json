{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.27.1.19265",
      "templateHash": "12210417901706871208"
    }
  },
  "parameters": {
    "domainJoinUserName": {
      "type": "string"
    },
    "domainJoinUserPassword": {
      "type": "securestring"
    },
    "groupAdmins": {
      "type": "string"
    },
    "groupUsers": {
      "type": "string"
    },
    "kerberosEncryptionType": {
      "type": "string",
      "defaultValue": "AES256"
    },
    "keyExpiration": {
      "type": "int",
      "defaultValue": "[dateTimeToEpoch(dateTimeAdd(utcNow(), 'P1Y'))]",
      "metadata": {
        "description": "Expiration time of the key"
      }
    },
    "keyVaultName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "managedIdentityName": {
      "type": "string"
    },
    "ouPath": {
      "type": "string"
    },
    "privateDNSZoneId": {
      "type": "string"
    },
    "smbSettings": {
      "type": "object"
    },
    "storageAcctName": {
      "type": "string"
    },
    "storageFileShareName": {
      "type": "string"
    },
    "storageResourceGroup": {
      "type": "string"
    },
    "storageShareSize": {
      "type": "int"
    },
    "storageSKU": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ]
    },
    "subnetId": {
      "type": "string"
    },
    "tags": {
      "type": "object"
    },
    "tenantId": {
      "type": "string"
    },
    "timestamp": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "vmName": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "domainJoinFQDN": "[split(parameters('domainJoinUserName'), '@')[1]]",
    "scriptLocation": "https://raw.githubusercontent.com/JCoreMS/HostPoolDeployment/master/scripts",
    "storageSetupScript": "domainJoinStorageAcct.ps1",
    "smbSettingsInitial": {
      "versions": "SMB2.1;SMB3.0;SMB3.1.1",
      "authenticationMethods": "Kerberos;NTLMv2",
      "kerberosTicketEncryption": "RC4-HMAC;AES-256",
      "channelEncryption": "AES-128-CCM;AES-128-GCM;AES-256-GCM"
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "enablePurgeProtection": true,
        "enableSoftDelete": true,
        "enabledForDiskEncryption": true,
        "enableRbacAuthorization": true,
        "enabledForDeployment": true,
        "networkAcls": {
          "defaultAction": "Deny",
          "bypass": "AzureServices"
        },
        "publicNetworkAccess": "Disabled",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 7,
        "tenantId": "[parameters('tenantId')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]",
      "tags": "[parameters('tags')]",
      "properties": {
        "attributes": {
          "enabled": true,
          "exp": "[parameters('keyExpiration')]"
        },
        "kty": "RSA",
        "keySize": 2048,
        "curveName": "P-256",
        "keyOps": [
          "encrypt",
          "decrypt",
          "sign",
          "verify",
          "wrapKey",
          "unwrapKey"
        ],
        "rotationPolicy": {
          "attributes": {
            "expiryTime": "P1Y"
          },
          "lifetimeActions": [
            {
              "action": {
                "type": "rotate"
              },
              "trigger": {
                "timeBeforeExpiry": "P90D"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
      "name": "[guid(subscription().subscriptionId, 'assignIdentity2Vault')]",
      "properties": {
        "description": "[format('Provides User Identity {0} access to Key Vault {1}', parameters('managedIdentityName'), parameters('keyVaultName'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '14b46e9e-c2b7-41b4-b07b-48a6ebf60603')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('storageAcctName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('storageSKU')]"
      },
      "kind": "StorageV2",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')))]": {}
        }
      },
      "properties": {
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "defaultToOAuthAuthentication": false,
        "accessTier": "Hot",
        "publicNetworkAccess": "Disabled",
        "allowCrossTenantReplication": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny"
        },
        "dnsEndpointType": "Standard",
        "largeFileSharesState": "Enabled",
        "encryption": {
          "identity": {
            "userAssignedIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
          },
          "keySource": "Microsoft.Keyvault",
          "keyvaultproperties": {
            "keyname": "[format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp'))]",
            "keyvaulturi": "[if(endsWith(reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri, '/'), substring(reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri, 0, sub(length(reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri), 1)), reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri)]"
          },
          "services": {
            "file": {
              "enabled": true
            }
          },
          "requireInfrastructureEncryption": false
        }
      },
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), 'Microsoft.Authorization/roleAssignments', guid(subscription().subscriptionId, 'assignIdentity2Vault'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), format('{0}-{1}', parameters('storageAcctName'), parameters('timestamp')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-07-01",
      "name": "[format('pep-{0}', parameters('storageAcctName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[format('pep-{0}', parameters('storageAcctName'))]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
              "groupIds": [
                "file"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[parameters('subnetId')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('storageAcctName'), 'default')]",
      "properties": {
        "protocolSettings": {
          "smb": "[variables('smbSettingsInitial')]"
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', format('pep-{0}', parameters('storageAcctName')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/default/{1}', parameters('storageAcctName'), parameters('storageFileShareName'))]",
      "properties": {
        "shareQuota": "[parameters('storageShareSize')]",
        "enabledProtocols": "SMB"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAcctName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', format('pep-{0}', parameters('storageAcctName')), 'filePrivateDnsZoneGroup')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "dnsConfig",
            "properties": {
              "privateDnsZoneId": "[parameters('privateDNSZoneId')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', format('pep-{0}', parameters('storageAcctName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "managementVm",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "domainJoinFQDN": {
            "value": "[variables('domainJoinFQDN')]"
          },
          "domainJoinOUPath": {
            "value": "[parameters('ouPath')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinUserPassword": {
            "value": "[parameters('domainJoinUserPassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "vmAdminPassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "vmAdminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "900689568709633235"
            }
          },
          "parameters": {
            "domainJoinFQDN": {
              "type": "string"
            },
            "domainJoinOUPath": {
              "type": "string"
            },
            "domainJoinUserName": {
              "type": "string"
            },
            "domainJoinUserPassword": {
              "type": "securestring"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "subnetId": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "timestamp": {
              "type": "string",
              "defaultValue": "[utcNow('u')]"
            },
            "vmName": {
              "type": "string"
            },
            "vmAdminUsername": {
              "type": "string"
            },
            "vmAdminPassword": {
              "type": "securestring"
            }
          },
          "variables": {
            "securityProfileJson": {
              "uefiSettings": {
                "secureBootEnabled": true,
                "vTpmEnabled": true
              },
              "securityType": "TrustedLaunch"
            },
            "imageToUse": {
              "publisher": "MicrosoftWindowsDesktop",
              "offer": "Windows-11",
              "sku": "win11-23h2-ent",
              "version": "latest"
            },
            "VmSize": "Standard_D2s_v4"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-11-01",
              "name": "[format('nic-{0}', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": true,
                "enableIPForwarding": false
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('VmSize')]"
                },
                "storageProfile": {
                  "imageReference": "[variables('imageToUse')]",
                  "osDisk": {
                    "name": "[format('{0}_osdisk', parameters('vmName'))]",
                    "osType": "Windows",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "deleteOption": "Delete"
                  },
                  "dataDisks": []
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('vmAdminUsername')]",
                  "adminPassword": "[parameters('vmAdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('vmName')))]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "securityProfile": "[variables('securityProfileJson')]",
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": false
                  }
                },
                "licenseType": "Windows_Client"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "vmPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2022-11-01', 'full').identity.principalId]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "roleAssignments",
      "resourceGroup": "[parameters('storageResourceGroup')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "managementVmPrincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'managementVm'), '2022-09-01').outputs.vmPrincipalId.value]"
          },
          "storageAccountId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "13155868949843056356"
            }
          },
          "parameters": {
            "keyVaultName": {
              "type": "string"
            },
            "storageAccountId": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "managementVmPrincipalId": {
              "type": "string"
            }
          },
          "variables": {
            "storageAcctName": "[split(parameters('storageAccountId'), '/')[8]]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('storageAccountId'), parameters('vmName'), 'Storage Account Key Operator Service Role')]",
              "properties": {
                "description": "[format('Storage Account Key Operators are allowed to list and regenerate keys on Storage Accounts (VM: {0})', parameters('vmName'))]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '81a9662b-bebf-436f-a333-f67b29880f12')]",
                "principalId": "[parameters('managementVmPrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('storageAccountId'), parameters('vmName'), 'Contributor')]",
              "properties": {
                "description": "[format('Allows the management VM ({0}) to domian join the storage account ({1})', parameters('vmName'), variables('storageAcctName'))]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[parameters('managementVmPrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'managementVm')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAcctName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "managementVMscript",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "domainJoinOUPath": {
            "value": "[parameters('ouPath')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinUserPassword": {
            "value": "[parameters('domainJoinUserPassword')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "scriptLocation": {
            "value": "[variables('scriptLocation')]"
          },
          "storageSetupScript": {
            "value": "[variables('storageSetupScript')]"
          },
          "storageSetupId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAcctName')]"
          },
          "storageFileShareName": {
            "value": "[parameters('storageFileShareName')]"
          },
          "storageResourceGroup": {
            "value": "[parameters('storageResourceGroup')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "timestamp": {
            "value": "[parameters('timestamp')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "groupAdmins": {
            "value": "[parameters('groupAdmins')]"
          },
          "groupUsers": {
            "value": "[parameters('groupUsers')]"
          },
          "kerberosEncryptionType": {
            "value": "[parameters('kerberosEncryptionType')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.27.1.19265",
              "templateHash": "13832785840977632172"
            }
          },
          "parameters": {
            "domainJoinOUPath": {
              "type": "string"
            },
            "domainJoinUserName": {
              "type": "string"
            },
            "domainJoinUserPassword": {
              "type": "securestring"
            },
            "groupAdmins": {
              "type": "string"
            },
            "groupUsers": {
              "type": "string"
            },
            "kerberosEncryptionType": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageFileShareName": {
              "type": "string"
            },
            "storageResourceGroup": {
              "type": "string"
            },
            "storageSetupId": {
              "type": "string"
            },
            "scriptLocation": {
              "type": "string"
            },
            "storageSetupScript": {
              "type": "string"
            },
            "tags": {
              "type": "object"
            },
            "timestamp": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            }
          },
          "variables": {
            "subscriptionId": "[subscription().subscriptionId]",
            "tenantId": "[subscription().tenantId]",
            "storageSetupScriptUri": "[format('{0}/{1}', parameters('scriptLocation'), parameters('storageSetupScript'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'CustomScriptExtension')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('storageSetupScriptUri')]"
                  ],
                  "timestamp": "[parameters('timestamp')]"
                },
                "protectedSettings": {
                  "commandToExecute": "[format('powershell -ExecutionPolicy Unrestricted -File {0} -OuPath {1} -StorageAccountName {2} -StorageAccountResourceGroupName {3} -SubscriptionId {4} -TenantId {5} -AclUsers {6} -AclAdmins {7} -StorageFileShareName {8} -DomainJoinUserPrincipalName {9} -DomainJoinPassword {10} -UserAssignedIdentityClientId {11}', parameters('storageSetupScript'), parameters('domainJoinOUPath'), parameters('storageAccountName'), parameters('storageResourceGroup'), variables('subscriptionId'), variables('tenantId'), parameters('groupUsers'), parameters('groupAdmins'), parameters('storageFileShareName'), parameters('domainJoinUserName'), parameters('domainJoinUserPassword'), parameters('storageSetupId'))]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'managementVm')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('storageResourceGroup')), 'Microsoft.Resources/deployments', 'roleAssignments')]"
      ]
    }
  ]
}